CREATE OR REPLACE PROCEDURE DAILYREVENUETRACKER_DATA_LOAD(INTEGER, INTEGER, CHARACTER VARYING(150), CHARACTER VARYING(150))
RETURNS INTEGER
LANGUAGE NZPLSQL AS
BEGIN_PROC
 DECLARE v_iETL_Date 
ALIAS for $1;

v_iETL_Job_ID 
ALIAS for $2;

v_strSP_Name 
ALIAS for $3;

v_strPackage_Name 
ALIAS for $4;

v_iSeverity integer := 0;

v_iRow_Count integer := 0;

v_strMessage varchar(250);

v_row_nbr SMALLINT;

v_max_row_nbr SMALLINT;

BEGIN v_strMessage := 'Start of DailyRevenueTracker_DATA_LOAD';

Call CreateAuditEvent(v_iETL_Date, v_iETL_Job_ID, v_iSeverity, v_iRow_Count, v_strSP_Name, v_strPackage_Name, v_strMessage);

v_strMessage := 'CREATE TEMP TABLE DAILYREVENUETRACKER_temp_dates';

CREATE TEMP TABLE DAILYREVENUETRACKER_temp_dates AS SELECT extr_dt.calendar_date AS ExtractDate , extr_dt.calendar_date_id AS extract_date_ID , expire_dt.calendar_date_id AS expiration_date_id , expire_dt.calendar_date AS expiration_date, CURRENT_TIMESTAMP AS l_CreateDate , CURRENT_USER AS l_CreateBy , CURRENT_TIMESTAMP AS l_ModifyDate , CURRENT_USER AS l_ModifyBy , LAST_DAY( 
CASE 
WHEN day(CURRENT_DATE)<=2 THEN CURRENT_DATE-2 ELSE CURRENT_DATE-1 
END) lastdayofmon 
FROM acedw..calendar_date extr_dt 
INNER JOIN acedw..calendar_date expire_dt ON extr_dt.calendar_date_id = v_iETL_Date 
AND expire_dt.calendar_date = DATE_TRUNC('Month', extr_dt.calendar_date -1 - INTERVAL '1 Month') 
DISTRIBUTE ON random;

v_iRow_Count := ROW_COUNT;

CALL CreateAuditEvent(v_iETL_Date, v_iETL_Job_ID, v_iSeverity, v_iRow_Count, v_strSP_Name, v_strPackage_Name, v_strMessage);

v_iRow_Count := 0;

v_strMessage := 'Create Temp Table CENTERS_DTE';

CREATE TEMP TABLE CENTERS_DTE AS SELECT DISTINCT A.CENTER, B.YYYYMMDDZ AS DTE 
FROM ACE_ODS. 
ADMIN.ACEHIERV01 A, ACE_ODS. 
ADMIN.CALENDAR B 
WHERE ((( (SQLDATE 
between to_date(YEAR(add_months(date_trunc('month',current_date-2),-1)) || 
case 
when length(MONTH(add_months(date_trunc('month',current_date-2),-1))-1) = 1 then 0 || MONTH(add_months(date_trunc('month',current_date-2),0)) - 1 
WHEN length(MONTH(add_months(date_trunc('month',current_date-2),-1))-1) = 2 then CAST(MONTH(add_months(date_trunc('month',current_date-2),0) - 1) AS VARCHAR(2)) 
END || '01', 'YYYYMMDD') 
and CASE 
WHEN day(CURRENT_DATE)<=2 THEN current_date-2 ELSE CURRENT_DATE-1 
END ) 
AND (A.CENTER >= 25)) 
AND ((A.CENTER < 5000) 
OR (A.CENTER > 5999))) ) 
ORDER BY A.CENTER, B.YYYYMMDDZ;

--v_iRow_Count := ROW_COUNT;
--
--CALL CreateAuditEvent(v_iETL_Date, v_iETL_Job_ID, v_iSeverity, v_iRow_Count, v_strSP_Name, v_strPackage_Name, v_strMessage);
--
--v_iRow_Count := 0;
--
--v_strMessage := 'Create Temp Table Actuals';
--
--create temp table actuals as with checks as ( 
--select a.*,(coalesce(REGULAR_CHECK_1ST_TIME_RETURNED_VOLUME,0) + coalesce(Store_Check_Collections,0) + coalesce(Store_Check_Returns,0)) as Net_Check_Collections, ((coalesce(REGULAR_CHECK_1ST_TIME_RETURNED_VOLUME,0) - (coalesce(REGULAR_CHECK_1ST_TIME_RETURNED_VOLUME,0) + coalesce(Store_Check_Collections,0) + coalesce(Store_Check_Returns,0))) * -1) as checkloss, coalesce(NET_CHECK_FEES,0) + coalesce(NET_TAX_FEES,0) + ((coalesce(REGULAR_CHECK_1ST_TIME_RETURNED_VOLUME,0) - (coalesce(REGULAR_CHECK_1ST_TIME_RETURNED_VOLUME,0) + coalesce(Store_Check_Collections,0) + coalesce(Store_Check_Returns,0))) * -1) as net_check_revenue, coalesce(total_interest_income,0) - (coalesce(loan_First_Returns,0) - coalesce(Net_loan_Collections,0)) net_loan_revenue, (coalesce(loan_First_Returns,0) - coalesce(Net_loan_Collections,0)) loan_loss,(coalesce(PREPAID_CARD_SALE_REVENUE,0) + coalesce(PREPAID_STORE_LOAD_REVENUE,0)) PPLoadFeesandCardSales,(coalesce(DDA_CARD_SALE_REVENUE,0) +coalesce(DDA_STORE_LOAD_REVENUE,0)) DDLoadFeesandCardSales 
--from ( 
--select center,period, SUM(coalesce(NET_CHECK_FEES,0)) + sum(coalesce(MOBILE_CHECK_ACE_FEES,0)) NET_CHECK_FEES , SUM(NET_TAX_FEES) NET_TAX_FEES , SUM(REGULAR_CHECK_1ST_TIME_RETURNED_VOLUME) REGULAR_CHECK_1ST_TIME_RETURNED_VOLUME , SUM(coalesce(REGULAR_CHECK_COLLECT_VOLUME,0) + coalesce(FORGERY_COLLECT_VOLUME,0)) as Store_Check_Collections , SUM((coalesce(FORGERY_RETURNED_VOLUME,0) + coalesce(REGULAR_CHECK_RETURNED_VOLUME,0)) * -1) as Store_Check_Returns ,SUM(coalesce(STOREFRONT_PAYDAY_INTEREST_INCOME,0)) + SUM(coalesce(STOREFRONT_INSTALLMENT_INTEREST_INCOME,0)) + SUM(coalesce(STOREFRONT_TITLE_INTEREST_INCOME,0)) + SUM(coalesce(INTERNET_INTEREST_INCOME,0)) total_interest_income , SUM(coalesce(STOREFRONT_PAYDAY_1ST_TIME_RETURNED_VOLUME,0)) + SUM(coalesce(STOREFRONT_INSTALLMENT_1ST_TIME_RETURNED_VOLUME,0)) + SUM(coalesce(STOREFRONT_TITLE_1ST_TIME_RETURNED_VOLUME,0)) + SUM(coalesce(INTERNET_1ST_TIME_RETURNED_VOLUME,0)) loan_First_Returns , SUM(coalesce(STOREFRONT_PAYDAY_COLLECTIONS,0)) + SUM(coalesce(STOREFRONT_INSTALLMENT_NET_COLLECTIONS,0)) + SUM(coalesce(STOREFRONT_TITLE_NET_COLLECTIONS,0)) + SUM(coalesce(INTERNET_NET_COLLECTIONS,0)) Net_loan_Collections ,sum(MONEY_ORDER_FEES) MONEY_ORDER_FEES, sum(MONEY_GRAM_FEES) MONEY_GRAM_FEES, sum(BILL_PAYMENT_FEES) BILL_PAYMENT_FEES, sum(ELECTRONIC_TAX_FEES ) ELECTRONIC_TAX_FEES, sum(NEW_CUSTOMER_FEES) NEW_CUSTOMER_FEES, sum(OTHER_REVENUE) OTHER_REVENUE, sum(TOTAL_NET_REVENUE) TOTAL_NET_REVENUE,sum(MONEY_ORDER_FEES) + sum(MONEY_GRAM_FEES) + sum(BILL_PAYMENT_FEES) Total_Money_Services, SUM(DENIED_CHECKS) DENIED_CHECKS,SUM(CHECKS_CASHED) CHECKS_CASHED,SUM(CHECK_FEE_ADJUSTMENT) CHECK_FEE_ADJUSTMENT,sum(PREPAID_CARD_SALE_REVENUE) as PREPAID_CARD_SALE_REVENUE,sum(PREPAID_STORE_LOAD_REVENUE) as PREPAID_STORE_LOAD_REVENUE,sum(PREPAID_WITHDRAWAL_REVENUE) as PREPAID_WITHDRAWAL_REVENUE, sum(GREEN_DOT_LOAD_FEES ) as GREEN_DOT_LOAD_FEES ,sum(ATM_FEE) as ATM_FEE,sum(PREPAID_STORE_LOAD_COMMISSION) as PREPAID_STORE_LOAD_COMMISSION, sum(PREPAID_DD_LOAD_COMMISSION) as PREPAID_DD_LOAD_COMMISSION, sum(PREPAID_WITHDRAWAL_COMMISSION) as PREPAID_WITHDRAWAL_COMMISSION, sum(PREPAID_OVERDRAFT_COMMISSION) as PREPAID_OVERDRAFT_COMMISSION, sum(PREPAID_SUBSCRIPTION_COMMISSION ) as PREPAID_SUBSCRIPTION_COMMISSION , sum(PREPAID_TRANSACTION_COMMISSION ) as PREPAID_TRANSACTION_COMMISSION , sum(OTHER_PREPAID_CARD_REVENUE ) as OTHER_PREPAID_CARD_REVENUE , sum(PREPAID_OUT_OF_ACE_ATM_COMMISSION ) as PREPAID_OUT_OF_ACE_ATM_COMMISSION , sum( DDA_CARD_SALE_REVENUE ) as DDA_CARD_SALE_REVENUE , sum( DDA_STORE_LOAD_REVENUE) as DDA_STORE_LOAD_REVENUE, sum( DDA_WITHDRAWAL_REVENUE ) as DDA_WITHDRAWAL_REVENUE , sum( DDA_INTERCHANGE_COMMISSION ) as DDA_INTERCHANGE_COMMISSION , sum( DDA_WITHDRAWAL_COMMISSION) as DDA_WITHDRAWAL_COMMISSION, sum( DDA_OVERDRAFT_COMMISSION ) as DDA_OVERDRAFT_COMMISSION , sum( DDA_OUT_OF_ACE_ATM_COMMISSION ) as DDA_OUT_OF_ACE_ATM_COMMISSION , sum( DDA_SUBSCRIPTION_COMMISSION) as DDA_SUBSCRIPTION_COMMISSION, sum( DDA_TRANSACTION_COMMISSION ) as DDA_TRANSACTION_COMMISSION , sum( OTHER_DDA_CARD_REVENUE) as OTHER_DDA_CARD_REVENUE, sum( DDA_STORE_LOAD_COMMISSION ) as DDA_STORE_LOAD_COMMISSION , sum(DDA_DD_LOAD_COMMISSION) as DDA_DD_LOAD_COMMISSION, SUM(INTERNET_1ST_TIME_RETURNED_VOLUME) INTERNET_1ST_TIME_RETURNED_VOLUME, SUM(INTERNET_INTEREST_INCOME) INTERNET_INTEREST_INCOME, SUM(INTERNET_NET_COLLECTIONS) INTERNET_NET_COLLECTIONS, SUM(MOBILE_CHECK_ACE_FEES) MOBILE_CHECK_ACE_FEES, SUM(STOREFRONT_PAYDAY_INTEREST_INCOME) STOREFRONT_PAYDAY_INTEREST_INCOME, SUM(STOREFRONT_INSTALLMENT_INTEREST_INCOME) STOREFRONT_INSTALLMENT_INTEREST_INCOME, SUM(STOREFRONT_TITLE_INTEREST_INCOME) STOREFRONT_TITLE_INTEREST_INCOME, SUM(STOREFRONT_PAYDAY_1ST_TIME_RETURNED_VOLUME) STOREFRONT_PAYDAY_1ST_TIME_RETURNED_VOLUME, SUM(STOREFRONT_INSTALLMENT_1ST_TIME_RETURNED_VOLUME) STOREFRONT_INSTALLMENT_1ST_TIME_RETURNED_VOLUME, SUM(STOREFRONT_TITLE_1ST_TIME_RETURNED_VOLUME) STOREFRONT_TITLE_1ST_TIME_RETURNED_VOLUME, SUM(STOREFRONT_PAYDAY_COLLECTIONS) STOREFRONT_PAYDAY_COLLECTIONS, SUM(STOREFRONT_INSTALLMENT_NET_COLLECTIONS) STOREFRONT_INSTALLMENT_NET_COLLECTIONS, SUM(STOREFRONT_TITLE_NET_COLLECTIONS) STOREFRONT_TITLE_NET_COLLECTIONS, SUM(PREPAID_INTERCHANGE_COMMISSION) PREPAID_INTERCHANGE_COMMISSION 
--from ACE_REPORTS_DB..ACE_OPS_DASHBOARD_ACTUAL_DATA_DAILY_VW A 
--WHERE TO_DATE(A.PERIOD, 'YYYYMMDD')>= Date_Trunc('MONTH', ADD_MONTHS(CURRENT_DATE-2, -1)) 
--AND TO_DATE(a.period, 'YYYYMMDD')<= 
--CASE 
--WHEN day(CURRENT_DATE)<=2 THEN CURRENT_DATE-2 ELSE CURRENT_DATE-1 
--END AND CENTER >=25 
--AND CENTER 
--NOT BETWEEN 5000 
--AND 5100 
--GROUP BY CENTER, A.PERIOD ) a ), prevmonDATA AS ( 
--SELECT C.DTE AS PERIOD, C.CENTER, A.NET_CHECK_FEES, B.NET_CHECK_FEES AS NET_CHK_FEE_LY, A.NET_TAX_FEES, B.NET_TAX_FEES AS NET_TAX_FEE_LY, A.REGULAR_CHECK_1ST_TIME_RETURNED_VOLUME, B.REGULAR_CHECK_1ST_TIME_RETURNED_VOLUME AS REGULAR_CHECK_1ST_TIME_RETURNED_VOLUME_LY, A.NET_CHECK_COLLECTIONS, B.NET_CHECK_COLLECTIONS AS NET_CHECK_COLLECTIONS_LY, A.NET_CHECK_REVENUE, B.NET_CHECK_REVENUE AS NET_CHECK_REVENUE_LY, a.checkloss AS CHECKLOSS, b.checkloss AS CHECKLOSS_LY, a.total_interest_income, b.total_interest_income as total_interest_income_ly, a.loan_First_Returns, b.loan_First_Returns as loan_First_Returns_ly, a.Net_loan_Collections, b.Net_loan_Collections as Net_loan_Collections_ly, a.net_loan_revenue, b.net_loan_revenue as net_loan_revenue_ly, a.loan_loss, b.loan_loss AS loan_loss_ly, a.MONEY_ORDER_FEES, b.MONEY_ORDER_FEES as MONEY_ORDER_FEES_ly, a.MONEY_GRAM_FEES, b.MONEY_GRAM_FEES as MONEY_GRAM_FEES_ly, a.BILL_PAYMENT_FEES, b.BILL_PAYMENT_FEES AS BILL_PAYMENT_FEES_ly, a.ELECTRONIC_TAX_FEES, b.ELECTRONIC_TAX_FEES as ELECTRONIC_TAX_FEES_ly, a.NEW_CUSTOMER_FEES, b.NEW_CUSTOMER_FEES as NEW_CUSTOMER_FEES_ly, a.OTHER_REVENUE, b.OTHER_REVENUE as OTHER_REVENUE_ly, a.Total_Money_Services , b.Total_Money_Services as Total_Money_Services_ly, A.DENIED_CHECKS, B.DENIED_CHECKS AS DENIED_CHECKS_LY, A.CHECKS_CASHED, B.CHECKS_CASHED as CHECKS_CASHED_LY, A.CHECK_FEE_ADJUSTMENT, B.CHECK_FEE_ADJUSTMENT as CHECK_FEE_ADJUSTMENT_LY, A.PREPAID_CARD_SALE_REVENUE AS PREPAID_CARD_SALE_REVENUE, B.PREPAID_CARD_SALE_REVENUE AS PREPAID_CARD_SALE_REVENUE_LY, A.PREPAID_STORE_LOAD_REVENUE , B.PREPAID_STORE_LOAD_REVENUE AS PREPAID_STORE_LOAD_REVENUE_LY, A.PREPAID_WITHDRAWAL_REVENUE AS PREPAID_WITHDRAWAL_REVENUE, B.PREPAID_WITHDRAWAL_REVENUE AS PREPAID_WITHDRAWAL_REVENUE_LY, A.GREEN_DOT_LOAD_FEES AS GREEN_DOT_LOAD_FEES , B.GREEN_DOT_LOAD_FEES AS GREEN_DOT_LOAD_FEES_LY, A.ATM_FEE AS ATM_FEE, B.ATM_FEE AS ATM_FEE_LY, A.PREPAID_STORE_LOAD_COMMISSION AS PREPAID_STORE_LOAD_COMMISSION, B.PREPAID_STORE_LOAD_COMMISSION AS PREPAID_STORE_LOAD_COMMISSION_LY, A.PREPAID_DD_LOAD_COMMISSION AS PREPAID_DD_LOAD_COMMISSION, B.PREPAID_DD_LOAD_COMMISSION AS PREPAID_DD_LOAD_COMMISSION_LY, A.PREPAID_WITHDRAWAL_COMMISSION AS PREPAID_WITHDRAWAL_COMMISSION, B.PREPAID_WITHDRAWAL_COMMISSION AS PREPAID_WITHDRAWAL_COMMISSION_LY, A.PREPAID_OVERDRAFT_COMMISSION AS PREPAID_OVERDRAFT_COMMISSION, B.PREPAID_OVERDRAFT_COMMISSION AS PREPAID_OVERDRAFT_COMMISSION_LY, A.PREPAID_SUBSCRIPTION_COMMISSION AS PREPAID_SUBSCRIPTION_COMMISSION , B.PREPAID_SUBSCRIPTION_COMMISSION AS PREPAID_SUBSCRIPTION_COMMISSION_LY, A.PREPAID_TRANSACTION_COMMISSION AS PREPAID_TRANSACTION_COMMISSION , B.PREPAID_TRANSACTION_COMMISSION AS PREPAID_TRANSACTION_COMMISSION_LY, A.OTHER_PREPAID_CARD_REVENUE AS OTHER_PREPAID_CARD_REVENUE , B.OTHER_PREPAID_CARD_REVENUE AS OTHER_PREPAID_CARD_REVENUE_LY, A.PREPAID_OUT_OF_ACE_ATM_COMMISSION AS PREPAID_OUT_OF_ACE_ATM_COMMISSION , B.PREPAID_OUT_OF_ACE_ATM_COMMISSION AS PREPAID_OUT_OF_ACE_ATM_COMMISSION_LY, A.DDA_CARD_SALE_REVENUE AS DDA_CARD_SALE_REVENUE , B.DDA_CARD_SALE_REVENUE AS DDA_CARD_SALE_REVENUE_LY, A.DDA_STORE_LOAD_REVENUE AS DDA_STORE_LOAD_REVENUE, B.DDA_STORE_LOAD_REVENUE AS DDA_STORE_LOAD_REVENUE_LY, A.DDA_WITHDRAWAL_REVENUE AS DDA_WITHDRAWAL_REVENUE , B.DDA_WITHDRAWAL_REVENUE AS DDA_WITHDRAWAL_REVENUE_LY, A.DDA_INTERCHANGE_COMMISSION AS DDA_INTERCHANGE_COMMISSION , B.DDA_INTERCHANGE_COMMISSION AS DDA_INTERCHANGE_COMMISSION_LY, A.DDA_WITHDRAWAL_COMMISSION, B.DDA_WITHDRAWAL_COMMISSION AS DDA_WITHDRAWAL_COMMISSION_LY, A.DDA_OVERDRAFT_COMMISSION AS DDA_OVERDRAFT_COMMISSION , B.DDA_OVERDRAFT_COMMISSION AS DDA_OVERDRAFT_COMMISSION_LY, A.DDA_OUT_OF_ACE_ATM_COMMISSION AS DDA_OUT_OF_ACE_ATM_COMMISSION , B.DDA_OUT_OF_ACE_ATM_COMMISSION AS DDA_OUT_OF_ACE_ATM_COMMISSION_LY, A.DDA_SUBSCRIPTION_COMMISSION AS DDA_SUBSCRIPTION_COMMISSION, B.DDA_SUBSCRIPTION_COMMISSION AS DDA_SUBSCRIPTION_COMMISSION_LY, A.DDA_TRANSACTION_COMMISSION AS DDA_TRANSACTION_COMMISSION , B.DDA_TRANSACTION_COMMISSION AS DDA_TRANSACTION_COMMISSION_LY, A.OTHER_DDA_CARD_REVENUE AS OTHER_DDA_CARD_REVENUE, B.OTHER_DDA_CARD_REVENUE AS OTHER_DDA_CARD_REVENUE_LY, A.DDA_STORE_LOAD_COMMISSION AS DDA_STORE_LOAD_COMMISSION , B.DDA_STORE_LOAD_COMMISSION AS DDA_STORE_LOAD_COMMISSION_LY, A.DDA_DD_LOAD_COMMISSION AS DDA_DD_LOAD_COMMISSION, B.DDA_DD_LOAD_COMMISSION AS DDA_DD_LOAD_COMMISSION_LY, A.PPLoadFeesandCardSales AS PPLoadFeesandCardSales, B.PPLoadFeesandCardSales AS PPLoadFeesandCardSales_LY, A.DDLoadFeesandCardSales AS DDLoadFeesandCardSales, B.DDLoadFeesandCardSales AS DDLoadFeesandCardSales_LY, A.INTERNET_1ST_TIME_RETURNED_VOLUME, B.INTERNET_1ST_TIME_RETURNED_VOLUME AS INTERNET_1ST_TIME_RETURNED_VOLUME_LY, A.INTERNET_INTEREST_INCOME, B.INTERNET_INTEREST_INCOME AS INTERNET_INTEREST_INCOME_LY, A.INTERNET_NET_COLLECTIONS, B.INTERNET_NET_COLLECTIONS AS INTERNET_NET_COLLECTIONS_LY, A.MOBILE_CHECK_ACE_FEES, B.MOBILE_CHECK_ACE_FEES AS MOBILE_CHECK_ACE_FEES_LY, A.STOREFRONT_PAYDAY_INTEREST_INCOME, B.STOREFRONT_PAYDAY_INTEREST_INCOME AS STOREFRONT_PAYDAY_INTEREST_INCOME_LY, A.STOREFRONT_INSTALLMENT_INTEREST_INCOME, B.STOREFRONT_INSTALLMENT_INTEREST_INCOME AS STOREFRONT_INSTALLMENT_INTEREST_INCOME_LY, A.STOREFRONT_TITLE_INTEREST_INCOME, B.STOREFRONT_TITLE_INTEREST_INCOME AS STOREFRONT_TITLE_INTEREST_INCOME_LY, A.STOREFRONT_PAYDAY_1ST_TIME_RETURNED_VOLUME, B.STOREFRONT_PAYDAY_1ST_TIME_RETURNED_VOLUME AS STOREFRONT_PAYDAY_1ST_TIME_RETURNED_VOLUME_LY, A.STOREFRONT_INSTALLMENT_1ST_TIME_RETURNED_VOLUME, B.STOREFRONT_INSTALLMENT_1ST_TIME_RETURNED_VOLUME AS STOREFRONT_INSTALLMENT_1ST_TIME_RETURNED_VOLUME_LY, A.STOREFRONT_TITLE_1ST_TIME_RETURNED_VOLUME, B.STOREFRONT_TITLE_1ST_TIME_RETURNED_VOLUME AS STOREFRONT_TITLE_1ST_TIME_RETURNED_VOLUME_LY, A.STOREFRONT_PAYDAY_COLLECTIONS, B.STOREFRONT_PAYDAY_COLLECTIONS AS STOREFRONT_PAYDAY_COLLECTIONS_LY, A.STOREFRONT_INSTALLMENT_NET_COLLECTIONS, B.STOREFRONT_INSTALLMENT_NET_COLLECTIONS AS STOREFRONT_INSTALLMENT_NET_COLLECTIONS_LY, A.STOREFRONT_TITLE_NET_COLLECTIONS, B.STOREFRONT_TITLE_NET_COLLECTIONS AS STOREFRONT_TITLE_NET_COLLECTIONS_LY, A.PREPAID_INTERCHANGE_COMMISSION, B.PREPAID_INTERCHANGE_COMMISSION AS PREPAID_INTERCHANGE_COMMISSION_LY, A.Store_Check_Collections, A.Store_Check_Returns 
--FROM ((CENTERS_DTE C 
--LEFT JOIN checks A ON (((FLOAT8(C.CENTER) = A.CENTER) 
--AND (C.DTE = A.PERIOD)))) 
--LEFT JOIN DAILYREVENUETRACKER B ON (((FLOAT8(C.CENTER) = B.CENTER) 
--AND (date(to_date(C.DTE,'YYYYMMDD')- cast('12 month' as interval)) = TO_DATE("VARCHAR"(B.PERIOD), 'YYYYMMDD'::"VARCHAR")) ))) 
--where to_date(C.DTE,'YYYYMMDD') < date_trunc('MONTH',CURRENT_DATE - 2) ), DATA AS ( 
--SELECT C.DTE AS PERIOD, C.CENTER, A.NET_CHECK_FEES, B.NET_CHECK_FEES AS NET_CHK_FEE_LY, A.NET_TAX_FEES, B.NET_TAX_FEES AS NET_TAX_FEE_LY, A.REGULAR_CHECK_1ST_TIME_RETURNED_VOLUME, B.REGULAR_CHECK_1ST_TIME_RETURNED_VOLUME AS REGULAR_CHECK_1ST_TIME_RETURNED_VOLUME_LY, A.NET_CHECK_COLLECTIONS, B.NET_CHECK_COLLECTIONS AS NET_CHECK_COLLECTIONS_LY, A.NET_CHECK_REVENUE, B.NET_CHECK_REVENUE AS NET_CHECK_REVENUE_LY, a.checkloss AS CHECKLOSS, b.checkloss AS CHECKLOSS_LY,a.total_interest_income,b.total_interest_income as total_interest_income_ly, a.loan_First_Returns,b.loan_First_Returns as loan_First_Returns_ly,a.Net_loan_Collections,b.Net_loan_Collections as Net_loan_Collections_ly,a.net_loan_revenue,b.net_loan_revenue as net_loan_revenue_ly, a.loan_loss,b.loan_loss loan_loss_ly, a.MONEY_ORDER_FEES,b.MONEY_ORDER_FEES as MONEY_ORDER_FEES_ly,a.MONEY_GRAM_FEES,b.MONEY_GRAM_FEES as MONEY_GRAM_FEES_ly,a.BILL_PAYMENT_FEES,b.BILL_PAYMENT_FEES BILL_PAYMENT_FEES_ly,a.ELECTRONIC_TAX_FEES,b.ELECTRONIC_TAX_FEES as ELECTRONIC_TAX_FEES_ly, a.NEW_CUSTOMER_FEES, b.NEW_CUSTOMER_FEES as NEW_CUSTOMER_FEES_ly,a.OTHER_REVENUE,b.OTHER_REVENUE as OTHER_REVENUE_ly,a.Total_Money_Services ,b.Total_Money_Services as Total_Money_Services_ly, A.DENIED_CHECKS,B.DENIED_CHECKS DENIED_CHECKS_LY,A.CHECKS_CASHED,B.CHECKS_CASHED CHECKS_CASHED_LY, A.CHECK_FEE_ADJUSTMENT,B.CHECK_FEE_ADJUSTMENT CHECK_FEE_ADJUSTMENT_LY,A.PREPAID_CARD_SALE_REVENUE AS PREPAID_CARD_SALE_REVENUE,B.PREPAID_CARD_SALE_REVENUE AS PREPAID_CARD_SALE_REVENUE_LY, A.PREPAID_STORE_LOAD_REVENUE ,B.PREPAID_STORE_LOAD_REVENUE AS PREPAID_STORE_LOAD_REVENUE_LY, A.PREPAID_WITHDRAWAL_REVENUE AS PREPAID_WITHDRAWAL_REVENUE,B.PREPAID_WITHDRAWAL_REVENUE AS PREPAID_WITHDRAWAL_REVENUE_LY, A.GREEN_DOT_LOAD_FEES AS GREEN_DOT_LOAD_FEES ,B.GREEN_DOT_LOAD_FEES AS GREEN_DOT_LOAD_FEES_LY, A.ATM_FEE AS ATM_FEE,B.ATM_FEE AS ATM_FEE_LY, A.PREPAID_STORE_LOAD_COMMISSION AS PREPAID_STORE_LOAD_COMMISSION,B.PREPAID_STORE_LOAD_COMMISSION AS PREPAID_STORE_LOAD_COMMISSION_LY, A.PREPAID_DD_LOAD_COMMISSION AS PREPAID_DD_LOAD_COMMISSION,B.PREPAID_DD_LOAD_COMMISSION AS PREPAID_DD_LOAD_COMMISSION_LY, A.PREPAID_WITHDRAWAL_COMMISSION AS PREPAID_WITHDRAWAL_COMMISSION,B.PREPAID_WITHDRAWAL_COMMISSION AS PREPAID_WITHDRAWAL_COMMISSION_LY, A.PREPAID_OVERDRAFT_COMMISSION AS PREPAID_OVERDRAFT_COMMISSION,B.PREPAID_OVERDRAFT_COMMISSION AS PREPAID_OVERDRAFT_COMMISSION_LY, A.PREPAID_SUBSCRIPTION_COMMISSION AS PREPAID_SUBSCRIPTION_COMMISSION ,B.PREPAID_SUBSCRIPTION_COMMISSION AS PREPAID_SUBSCRIPTION_COMMISSION_LY, A.PREPAID_TRANSACTION_COMMISSION AS PREPAID_TRANSACTION_COMMISSION ,B.PREPAID_TRANSACTION_COMMISSION AS PREPAID_TRANSACTION_COMMISSION_LY, A.OTHER_PREPAID_CARD_REVENUE AS OTHER_PREPAID_CARD_REVENUE ,B.OTHER_PREPAID_CARD_REVENUE AS OTHER_PREPAID_CARD_REVENUE_LY, A.PREPAID_OUT_OF_ACE_ATM_COMMISSION AS PREPAID_OUT_OF_ACE_ATM_COMMISSION ,B.PREPAID_OUT_OF_ACE_ATM_COMMISSION AS PREPAID_OUT_OF_ACE_ATM_COMMISSION_LY, A.DDA_CARD_SALE_REVENUE AS DDA_CARD_SALE_REVENUE ,B.DDA_CARD_SALE_REVENUE AS DDA_CARD_SALE_REVENUE_LY, A.DDA_STORE_LOAD_REVENUE AS DDA_STORE_LOAD_REVENUE,B.DDA_STORE_LOAD_REVENUE AS DDA_STORE_LOAD_REVENUE_LY, A.DDA_WITHDRAWAL_REVENUE AS DDA_WITHDRAWAL_REVENUE ,B.DDA_WITHDRAWAL_REVENUE AS DDA_WITHDRAWAL_REVENUE_LY, A.DDA_INTERCHANGE_COMMISSION AS DDA_INTERCHANGE_COMMISSION ,B.DDA_INTERCHANGE_COMMISSION AS DDA_INTERCHANGE_COMMISSION_LY, A.DDA_WITHDRAWAL_COMMISSION,B.DDA_WITHDRAWAL_COMMISSION AS DDA_WITHDRAWAL_COMMISSION_LY, A.DDA_OVERDRAFT_COMMISSION AS DDA_OVERDRAFT_COMMISSION ,B.DDA_OVERDRAFT_COMMISSION AS DDA_OVERDRAFT_COMMISSION_LY, A.DDA_OUT_OF_ACE_ATM_COMMISSION AS DDA_OUT_OF_ACE_ATM_COMMISSION ,B.DDA_OUT_OF_ACE_ATM_COMMISSION AS DDA_OUT_OF_ACE_ATM_COMMISSION_LY, A.DDA_SUBSCRIPTION_COMMISSION AS DDA_SUBSCRIPTION_COMMISSION,B.DDA_SUBSCRIPTION_COMMISSION AS DDA_SUBSCRIPTION_COMMISSION_LY, A.DDA_TRANSACTION_COMMISSION AS DDA_TRANSACTION_COMMISSION ,B.DDA_TRANSACTION_COMMISSION AS DDA_TRANSACTION_COMMISSION_LY, A.OTHER_DDA_CARD_REVENUE AS OTHER_DDA_CARD_REVENUE,B.OTHER_DDA_CARD_REVENUE AS OTHER_DDA_CARD_REVENUE_LY, A.DDA_STORE_LOAD_COMMISSION AS DDA_STORE_LOAD_COMMISSION ,B.DDA_STORE_LOAD_COMMISSION AS DDA_STORE_LOAD_COMMISSION_LY, A.DDA_DD_LOAD_COMMISSION AS DDA_DD_LOAD_COMMISSION,B.DDA_DD_LOAD_COMMISSION AS DDA_DD_LOAD_COMMISSION_LY, A.PPLoadFeesandCardSales AS PPLoadFeesandCardSales,B.PPLoadFeesandCardSales AS PPLoadFeesandCardSales_LY,A.DDLoadFeesandCardSales AS DDLoadFeesandCardSales, B.DDLoadFeesandCardSales AS DDLoadFeesandCardSales_LY, A.INTERNET_1ST_TIME_RETURNED_VOLUME,B.INTERNET_1ST_TIME_RETURNED_VOLUME INTERNET_1ST_TIME_RETURNED_VOLUME_LY, A.INTERNET_INTEREST_INCOME,B.INTERNET_INTEREST_INCOME INTERNET_INTEREST_INCOME_LY, A.INTERNET_NET_COLLECTIONS,B.INTERNET_NET_COLLECTIONS INTERNET_NET_COLLECTIONS_LY, A.MOBILE_CHECK_ACE_FEES,B.MOBILE_CHECK_ACE_FEES MOBILE_CHECK_ACE_FEES_LY, A.STOREFRONT_PAYDAY_INTEREST_INCOME,B.STOREFRONT_PAYDAY_INTEREST_INCOME STOREFRONT_PAYDAY_INTEREST_INCOME_LY, A.STOREFRONT_INSTALLMENT_INTEREST_INCOME,B.STOREFRONT_INSTALLMENT_INTEREST_INCOME STOREFRONT_INSTALLMENT_INTEREST_INCOME_LY, A.STOREFRONT_TITLE_INTEREST_INCOME,B.STOREFRONT_TITLE_INTEREST_INCOME STOREFRONT_TITLE_INTEREST_INCOME_LY, A.STOREFRONT_PAYDAY_1ST_TIME_RETURNED_VOLUME,B.STOREFRONT_PAYDAY_1ST_TIME_RETURNED_VOLUME STOREFRONT_PAYDAY_1ST_TIME_RETURNED_VOLUME_LY, A.STOREFRONT_INSTALLMENT_1ST_TIME_RETURNED_VOLUME,B.STOREFRONT_INSTALLMENT_1ST_TIME_RETURNED_VOLUME STOREFRONT_INSTALLMENT_1ST_TIME_RETURNED_VOLUME_LY, A.STOREFRONT_TITLE_1ST_TIME_RETURNED_VOLUME,B.STOREFRONT_TITLE_1ST_TIME_RETURNED_VOLUME STOREFRONT_TITLE_1ST_TIME_RETURNED_VOLUME_LY, A.STOREFRONT_PAYDAY_COLLECTIONS,B.STOREFRONT_PAYDAY_COLLECTIONS STOREFRONT_PAYDAY_COLLECTIONS_LY, A.STOREFRONT_INSTALLMENT_NET_COLLECTIONS,B.STOREFRONT_INSTALLMENT_NET_COLLECTIONS STOREFRONT_INSTALLMENT_NET_COLLECTIONS_LY, A.STOREFRONT_TITLE_NET_COLLECTIONS,B.STOREFRONT_TITLE_NET_COLLECTIONS STOREFRONT_TITLE_NET_COLLECTIONS_LY, A.PREPAID_INTERCHANGE_COMMISSION,B.PREPAID_INTERCHANGE_COMMISSION PREPAID_INTERCHANGE_COMMISSION_LY, A.Store_Check_Collections, A.Store_Check_Returns 
--from CENTERS_DTE C 
--LEFT JOIN CHECKS A ON C.CENTER = A.CENTER 
--AND C.DTE = A.PERIOD 
--left outer join DAILYREVENUETRACKER B on C.center = B.center 
--AND ((TO_DATE("VARCHAR"(C.DTE), 'YYYYMMDD'::"VARCHAR") - 364) = TO_DATE("VARCHAR"(B.PERIOD), 'YYYYMMDD'::"VARCHAR")) 
--where to_date(C.dte,'YYYYMMDD') >= date_trunc('MONTH',CURRENT_DATE - 2) ) 
--select * 
--from prevmonDATA 
--union all SELECT * 
--FROM DATA 
--DISTRIBUTE ON random;
--
--v_iRow_Count := ROW_COUNT;
--
--CALL CreateAuditEvent(v_iETL_Date, v_iETL_Job_ID, v_iSeverity, v_iRow_Count, v_strSP_Name, v_strPackage_Name, v_strMessage);
--
--v_iRow_Count := 0;
--
--v_strMessage := 'Create Temp Table plan';
--
--create temp table plan as with data as ( 
--select a.*,(coalesce(REGULAR_CHECK_1ST_TIME_RETURNED_VOLUME,0) + coalesce(Store_Check_Collections,0) + coalesce(Store_Check_Returns,0)) as Net_Check_Collections, ((coalesce(REGULAR_CHECK_1ST_TIME_RETURNED_VOLUME,0) - (coalesce(REGULAR_CHECK_1ST_TIME_RETURNED_VOLUME,0) + coalesce(Store_Check_Collections,0) + coalesce(Store_Check_Returns,0))) * -1) as checkloss, coalesce(NET_CHECK_FEES,0) + coalesce(NET_TAX_FEES,0) + ((coalesce(REGULAR_CHECK_1ST_TIME_RETURNED_VOLUME,0) - (coalesce(REGULAR_CHECK_1ST_TIME_RETURNED_VOLUME,0) + coalesce(Store_Check_Collections,0) + coalesce(Store_Check_Returns,0))) * -1) as net_check_revenue, coalesce(total_interest_income,0) - (coalesce(loan_First_Returns,0) - coalesce(Net_loan_Collections,0)) net_loan_revenue, (coalesce(loan_First_Returns,0) - coalesce(Net_loan_Collections,0)) loan_loss,(coalesce(PREPAID_CARD_SALE_REVENUE,0) + coalesce(PREPAID_STORE_LOAD_REVENUE,0)) PPLoadFeesandCardSales,(coalesce(DDA_CARD_SALE_REVENUE,0) +coalesce(DDA_STORE_LOAD_REVENUE,0)) DDLoadFeesandCardSales 
--from ( 
--select center,period, SUM(coalesce(NET_CHECK_FEES,0)) + sum(coalesce(MOBILE_CHECK_ACE_FEES,0)) NET_CHECK_FEES , SUM(NET_TAX_FEES) NET_TAX_FEES , SUM(REGULAR_CHECK_1ST_TIME_RETURNED_VOLUME) REGULAR_CHECK_1ST_TIME_RETURNED_VOLUME , SUM(coalesce(REGULAR_CHECK_COLLECT_VOLUME,0) + coalesce(FORGERY_COLLECT_VOLUME,0)) as Store_Check_Collections , SUM((coalesce(FORGERY_RETURNED_VOLUME,0) + coalesce(REGULAR_CHECK_RETURNED_VOLUME,0)) * -1) as Store_Check_Returns ,SUM(coalesce(STOREFRONT_PAYDAY_INTEREST_INCOME,0)) + SUM(coalesce(STOREFRONT_INSTALLMENT_INTEREST_INCOME,0)) + SUM(coalesce(STOREFRONT_TITLE_INTEREST_INCOME,0)) + SUM(coalesce(INTERNET_INTEREST_INCOME,0)) total_interest_income , SUM(coalesce(STOREFRONT_PAYDAY_1ST_TIME_RETURNED_VOLUME,0)) + SUM(coalesce(STOREFRONT_INSTALLMENT_1ST_TIME_RETURNED_VOLUME,0)) + SUM(coalesce(STOREFRONT_TITLE_1ST_TIME_RETURNED_VOLUME,0)) + SUM(coalesce(INTERNET_1ST_TIME_RETURNED_VOLUME,0)) loan_First_Returns , SUM(coalesce(STOREFRONT_PAYDAY_COLLECTIONS,0)) + SUM(coalesce(STOREFRONT_INSTALLMENT_NET_COLLECTIONS,0)) + SUM(coalesce(STOREFRONT_TITLE_NET_COLLECTIONS,0)) + SUM(coalesce(INTERNET_NET_COLLECTIONS,0)) Net_loan_Collections ,sum(MONEY_ORDER_FEES) MONEY_ORDER_FEES, sum(MONEY_GRAM_FEES) MONEY_GRAM_FEES, sum(BILL_PAYMENT_FEES) BILL_PAYMENT_FEES, sum(ELECTRONIC_TAX_FEES ) ELECTRONIC_TAX_FEES, sum(NEW_CUSTOMER_FEES) NEW_CUSTOMER_FEES ,sum(OTHER_REVENUE) OTHER_REVENUE, sum(TOTAL_NET_REVENUE) TOTAL_NET_REVENUE, sum(MONEY_ORDER_FEES) + sum(MONEY_GRAM_FEES) + sum(BILL_PAYMENT_FEES) Total_Money_Services, sum(PREPAID_CARD_SALE_REVENUE) as PREPAID_CARD_SALE_REVENUE, sum(PREPAID_STORE_LOAD_REVENUE) as PREPAID_STORE_LOAD_REVENUE,sum(PREPAID_WITHDRAWAL_REVENUE) as PREPAID_WITHDRAWAL_REVENUE, sum(GREEN_DOT_LOAD_FEES ) as GREEN_DOT_LOAD_FEES ,sum(ATM_FEE) as ATM_FEE,sum(PREPAID_STORE_LOAD_COMMISSION) as PREPAID_STORE_LOAD_COMMISSION, sum(PREPAID_DD_LOAD_COMMISSION) PREPAID_DD_LOAD_COMMISSION, sum(PREPAID_WITHDRAWAL_COMMISSION) as PREPAID_WITHDRAWAL_COMMISSION, sum(PREPAID_OVERDRAFT_COMMISSION) as PREPAID_OVERDRAFT_COMMISSION, sum(PREPAID_SUBSCRIPTION_COMMISSION ) PREPAID_SUBSCRIPTION_COMMISSION , sum(PREPAID_TRANSACTION_COMMISSION ) PREPAID_TRANSACTION_COMMISSION , sum(OTHER_PREPAID_CARD_REVENUE ) as OTHER_PREPAID_CARD_REVENUE , sum(PREPAID_OUT_OF_ACE_ATM_COMMISSION ) as PREPAID_OUT_OF_ACE_ATM_COMMISSION , sum( DDA_CARD_SALE_REVENUE ) as DDA_CARD_SALE_REVENUE , sum( DDA_STORE_LOAD_REVENUE) as DDA_STORE_LOAD_REVENUE, sum( DDA_WITHDRAWAL_REVENUE ) as DDA_WITHDRAWAL_REVENUE , sum( DDA_INTERCHANGE_COMMISSION ) DDA_INTERCHANGE_COMMISSION , sum( DDA_WITHDRAWAL_COMMISSION) as DDA_WITHDRAWAL_COMMISSION, sum( DDA_OVERDRAFT_COMMISSION ) as DDA_OVERDRAFT_COMMISSION , sum( DDA_OUT_OF_ACE_ATM_COMMISSION ) DDA_OUT_OF_ACE_ATM_COMMISSION , sum( DDA_SUBSCRIPTION_COMMISSION) DDA_SUBSCRIPTION_COMMISSION, sum( DDA_TRANSACTION_COMMISSION ) DDA_TRANSACTION_COMMISSION , sum( OTHER_DDA_CARD_REVENUE) as OTHER_DDA_CARD_REVENUE, sum( DDA_STORE_LOAD_COMMISSION ) as DDA_STORE_LOAD_COMMISSION , sum(DDA_DD_LOAD_COMMISSION) as DDA_DD_LOAD_COMMISSION, SUM(INTERNET_1ST_TIME_RETURNED_VOLUME) INTERNET_1ST_TIME_RETURNED_VOLUME, SUM(INTERNET_INTEREST_INCOME) INTERNET_INTEREST_INCOME, SUM(INTERNET_NET_COLLECTIONS) INTERNET_NET_COLLECTIONS, SUM(MOBILE_CHECK_ACE_FEES) MOBILE_CHECK_ACE_FEES, SUM(STOREFRONT_PAYDAY_INTEREST_INCOME) STOREFRONT_PAYDAY_INTEREST_INCOME, SUM(STOREFRONT_INSTALLMENT_INTEREST_INCOME) STOREFRONT_INSTALLMENT_INTEREST_INCOME, SUM(STOREFRONT_TITLE_INTEREST_INCOME) STOREFRONT_TITLE_INTEREST_INCOME, SUM(STOREFRONT_PAYDAY_1ST_TIME_RETURNED_VOLUME) STOREFRONT_PAYDAY_1ST_TIME_RETURNED_VOLUME, SUM(STOREFRONT_INSTALLMENT_1ST_TIME_RETURNED_VOLUME) STOREFRONT_INSTALLMENT_1ST_TIME_RETURNED_VOLUME, SUM(STOREFRONT_TITLE_1ST_TIME_RETURNED_VOLUME) STOREFRONT_TITLE_1ST_TIME_RETURNED_VOLUME, SUM(STOREFRONT_PAYDAY_COLLECTIONS) STOREFRONT_PAYDAY_COLLECTIONS, SUM(STOREFRONT_INSTALLMENT_NET_COLLECTIONS) STOREFRONT_INSTALLMENT_NET_COLLECTIONS, SUM(STOREFRONT_TITLE_NET_COLLECTIONS) STOREFRONT_TITLE_NET_COLLECTIONS, SUM(PREPAID_INTERCHANGE_COMMISSION) PREPAID_INTERCHANGE_COMMISSION 
--from ACE_REPORTS_DB..ACE_OPS_DASHBOARD_plan_DATA_DAILY_VW A 
--WHERE TO_DATE(A.PERIOD, 'YYYYMMDD')>= Date_Trunc('MONTH', ADD_MONTHS(CURRENT_DATE-2, -1)) 
--AND TO_DATE(a.period, 'YYYYMMDD')<= 
--CASE 
--WHEN day(CURRENT_DATE)<=2 THEN CURRENT_DATE-2 ELSE LAST_DAY(CURRENT_DATE-1) 
--END AND CENTER >=25 
--AND CENTER 
--NOT BETWEEN 5000 
--AND 5100 
--GROUP BY CENTER, A.PERIOD ) a ) 
--select * 
--from data A 
--DISTRIBUTE ON RANDOM;
--
--v_iRow_Count := ROW_COUNT;
--
--CALL CreateAuditEvent(v_iETL_Date, v_iETL_Job_ID, v_iSeverity, v_iRow_Count, v_strSP_Name, v_strPackage_Name, v_strMessage);
--
--v_iRow_Count := 0;
--
--v_strMessage := 'Create Temp Table DATA';
--
--CREATE TEMP TABLE DATA AS select coalesce(a.center,b.center) center,coalesce(a.period,b.period) period, coalesce(a.NET_CHECK_FEES,0) NET_CHECK_FEES, coalesce(NET_CHK_FEE_LY,0) NET_CHK_FEE_LY,coalesce(b.NET_CHECK_FEES,0) NET_CHECK_FEES_plan, coalesce(a.NET_TAX_FEES,0) NET_TAX_FEES, coalesce(NET_TAX_FEE_LY,0) NET_TAX_FEE_LY,coalesce(b.NET_TAX_FEES,0) NET_TAX_FEES_plan, coalesce(a.REGULAR_CHECK_1ST_TIME_RETURNED_VOLUME,0) REGULAR_CHECK_1ST_TIME_RETURNED_VOLUME, coalesce(REGULAR_CHECK_1ST_TIME_RETURNED_VOLUME_LY,0) REGULAR_CHECK_1ST_TIME_RETURNED_VOLUME_LY,coalesce(b.REGULAR_CHECK_1ST_TIME_RETURNED_VOLUME,0) REGULAR_CHECK_1ST_TIME_RETURNED_VOLUME_plan, coalesce(a.NET_CHECK_COLLECTIONS,0) NET_CHECK_COLLECTIONS, coalesce(NET_CHECK_COLLECTIONS_LY,0) NET_CHECK_COLLECTIONS_LY, coalesce(b.NET_CHECK_COLLECTIONS,0) NET_CHECK_COLLECTIONS_plan, coalesce(a.NET_CHECK_REVENUE,0) NET_CHECK_REVENUE, coalesce(NET_CHECK_REVENUE_LY,0) NET_CHECK_REVENUE_LY, coalesce(b.NET_CHECK_REVENUE,0) NET_CHECK_REVENUE_plan, coalesce(a.CHECKLOSS,0) CHECKLOSS, coalesce(CHECKLOSS_LY,0) CHECKLOSS_LY, coalesce(b.CHECKLOSS,0) CHECKLOSS_plan, coalesce(a.TOTAL_INTEREST_INCOME,0) TOTAL_INTEREST_INCOME, coalesce(TOTAL_INTEREST_INCOME_LY,0) TOTAL_INTEREST_INCOME_LY, 
--case 
--when coalesce(a.center,b.center) = 1544 then 0 else coalesce(b.TOTAL_INTEREST_INCOME,0) 
--end as TOTAL_INTEREST_INCOME_plan, coalesce(a.LOAN_FIRST_RETURNS,0) LOAN_FIRST_RETURNS, coalesce(LOAN_FIRST_RETURNS_LY,0) LOAN_FIRST_RETURNS_LY, 
--case 
--when coalesce(a.center,b.center) = 1544 then 0 else coalesce(b.LOAN_FIRST_RETURNS,0) 
--end as LOAN_FIRST_RETURNS_plan, coalesce(a.NET_LOAN_COLLECTIONS,0) NET_LOAN_COLLECTIONS, coalesce(NET_LOAN_COLLECTIONS_LY,0) NET_LOAN_COLLECTIONS_LY, 
--case 
--when coalesce(a.center,b.center) = 1544 then 0 else coalesce(b.NET_LOAN_COLLECTIONS,0) 
--end as NET_LOAN_COLLECTIONS_plan, coalesce(a.NET_LOAN_REVENUE,0) NET_LOAN_REVENUE, coalesce(NET_LOAN_REVENUE_LY,0) NET_LOAN_REVENUE_LY, 
--case 
--when coalesce(a.center,b.center) = 1544 then 0 else coalesce(b.NET_LOAN_REVENUE,0) 
--end as NET_LOAN_REVENUE_plan, coalesce(a.LOAN_LOSS,0) LOAN_LOSS, coalesce(LOAN_LOSS_LY,0) LOAN_LOSS_LY, 
--case 
--when coalesce(a.center,b.center) = 1544 then 0 else coalesce(b.LOAN_LOSS,0) 
--end as LOAN_LOSS_plan, coalesce(a.MONEY_ORDER_FEES,0) MONEY_ORDER_FEES, coalesce(MONEY_ORDER_FEES_LY,0) MONEY_ORDER_FEES_LY, coalesce(b.MONEY_ORDER_FEES,0) MONEY_ORDER_FEES_plan, coalesce(a.MONEY_GRAM_FEES,0) MONEY_GRAM_FEES, coalesce(MONEY_GRAM_FEES_LY,0) MONEY_GRAM_FEES_LY, coalesce(b.MONEY_GRAM_FEES,0) MONEY_GRAM_FEES_plan, coalesce(a.BILL_PAYMENT_FEES,0) BILL_PAYMENT_FEES, coalesce(BILL_PAYMENT_FEES_LY,0) BILL_PAYMENT_FEES_LY, coalesce(b.BILL_PAYMENT_FEES,0) BILL_PAYMENT_FEES_plan, coalesce(a.ELECTRONIC_TAX_FEES,0) ELECTRONIC_TAX_FEES, coalesce(ELECTRONIC_TAX_FEES_LY,0) ELECTRONIC_TAX_FEES_LY, coalesce(b.ELECTRONIC_TAX_FEES,0) ELECTRONIC_TAX_FEES_plan, coalesce(a.NEW_CUSTOMER_FEES,0) NEW_CUSTOMER_FEES, coalesce(NEW_CUSTOMER_FEES_LY,0) NEW_CUSTOMER_FEES_LY, coalesce(b.NEW_CUSTOMER_FEES,0) NEW_CUSTOMER_FEES_plan, coalesce(a.OTHER_REVENUE,0) OTHER_REVENUE, coalesce(OTHER_REVENUE_LY,0) OTHER_REVENUE_LY, coalesce(b.OTHER_REVENUE,0) OTHER_REVENUE_plan, coalesce(a.TOTAL_MONEY_SERVICES,0) TOTAL_MONEY_SERVICES, coalesce(TOTAL_MONEY_SERVICES_LY,0) TOTAL_MONEY_SERVICES_LY, coalesce(b.TOTAL_MONEY_SERVICES,0) TOTAL_MONEY_SERVICES_plan, coalesce(DENIED_CHECKS,0) DENIED_CHECKS, coalesce(DENIED_CHECKS_LY,0) DENIED_CHECKS_LY,coalesce(CHECKS_CASHED,0) CHECKS_CASHED, coalesce(CHECKS_CASHED_LY,0) CHECKS_CASHED_LY, coalesce(CHECK_FEE_ADJUSTMENT,0) CHECK_FEE_ADJUSTMENT, coalesce(CHECK_FEE_ADJUSTMENT_LY,0) CHECK_FEE_ADJUSTMENT_LY, COALESCE(A.PREPAID_CARD_SALE_REVENUE,0) AS PREPAID_CARD_SALE_REVENUE,COALESCE(PREPAID_CARD_SALE_REVENUE_LY,0) as PREPAID_CARD_SALE_REVENUE_ly,coalesce(b.PREPAID_CARD_SALE_REVENUE,0) as PREPAID_CARD_SALE_REVENUE_plan, COALESCE(A.PREPAID_STORE_LOAD_REVENUE,0) AS PREPAID_STORE_LOAD_REVENUE,COALESCE(PREPAID_STORE_LOAD_REVENUE_LY,0) as PREPAID_STORE_LOAD_REVENUE_ly,coalesce(b.PREPAID_STORE_LOAD_REVENUE,0) as PREPAID_STORE_LOAD_REVENUE_plan, COALESCE(A.PREPAID_WITHDRAWAL_REVENUE,0) AS PREPAID_WITHDRAWAL_REVENUE,COALESCE(PREPAID_WITHDRAWAL_REVENUE_LY,0) as PREPAID_WITHDRAWAL_REVENUE_ly,coalesce(b.PREPAID_WITHDRAWAL_REVENUE,0) as PREPAID_WITHDRAWAL_REVENUE_plan, COALESCE(A.GREEN_DOT_LOAD_FEES ,0) AS GREEN_DOT_LOAD_FEES ,COALESCE(GREEN_DOT_LOAD_FEES_LY,0) as GREEN_DOT_LOAD_FEES_ly,coalesce(b.GREEN_DOT_LOAD_FEES ,0) as GREEN_DOT_LOAD_FEES_plan, COALESCE(A.ATM_FEE,0) AS ATM_FEE,COALESCE(ATM_FEE_LY,0) as ATM_FEE_ly,coalesce(b.ATM_FEE,0) as ATM_FEE_plan, COALESCE(A.PREPAID_STORE_LOAD_COMMISSION,0) AS PREPAID_STORE_LOAD_COMMISSION,COALESCE(PREPAID_STORE_LOAD_COMMISSION_LY,0) as PREPAID_STORE_LOAD_COMMISSION_ly,coalesce(b.PREPAID_STORE_LOAD_COMMISSION,0) as PREPAID_STORE_LOAD_COMMISSION_plan, COALESCE(A.PREPAID_DD_LOAD_COMMISSION,0) AS PREPAID_DD_LOAD_COMMISSION,COALESCE(PREPAID_DD_LOAD_COMMISSION_LY,0) as PREPAID_DD_LOAD_COMMISSION_ly,coalesce(b.PREPAID_DD_LOAD_COMMISSION,0) as PREPAID_DD_LOAD_COMMISSION_plan, COALESCE(A.PREPAID_WITHDRAWAL_COMMISSION,0) AS PREPAID_WITHDRAWAL_COMMISSION,COALESCE(PREPAID_WITHDRAWAL_COMMISSION_LY,0) as PREPAID_WITHDRAWAL_COMMISSION_ly,coalesce(b.PREPAID_WITHDRAWAL_COMMISSION,0) as PREPAID_WITHDRAWAL_COMMISSION_plan, COALESCE(A.PREPAID_OVERDRAFT_COMMISSION,0) AS PREPAID_OVERDRAFT_COMMISSION,COALESCE(PREPAID_OVERDRAFT_COMMISSION_LY,0) as PREPAID_OVERDRAFT_COMMISSION_ly,coalesce(b.PREPAID_OVERDRAFT_COMMISSION,0) as PREPAID_OVERDRAFT_COMMISSION_plan, COALESCE(A.PREPAID_SUBSCRIPTION_COMMISSION ,0) AS PREPAID_SUBSCRIPTION_COMMISSION ,COALESCE(PREPAID_SUBSCRIPTION_COMMISSION_LY,0) as PREPAID_SUBSCRIPTION_COMMISSION_ly,coalesce(b.PREPAID_SUBSCRIPTION_COMMISSION ,0) as PREPAID_SUBSCRIPTION_COMMISSION_plan, COALESCE(A.PREPAID_TRANSACTION_COMMISSION ,0) AS PREPAID_TRANSACTION_COMMISSION ,COALESCE(PREPAID_TRANSACTION_COMMISSION_LY,0) as PREPAID_TRANSACTION_COMMISSION_ly,coalesce(b.PREPAID_TRANSACTION_COMMISSION ,0) as PREPAID_TRANSACTION_COMMISSION_plan, 
--case 
--when coalesce(a.period,b.period) > 20191231 
--AND TO_DATE(coalesce(a.period,b.period),'YYYYMMDD') < CURRENT_DATE then COALESCE(B.OTHER_PREPAID_CARD_REVENUE ,0) else 0 
--END AS OTHER_PREPAID_CARD_REVENUE , COALESCE(OTHER_PREPAID_CARD_REVENUE_LY,0) as OTHER_PREPAID_CARD_REVENUE_ly, coalesce(b.OTHER_PREPAID_CARD_REVENUE ,0) as OTHER_PREPAID_CARD_REVENUE_plan, COALESCE(A.PREPAID_OUT_OF_ACE_ATM_COMMISSION ,0) AS PREPAID_OUT_OF_ACE_ATM_COMMISSION ,COALESCE(PREPAID_OUT_OF_ACE_ATM_COMMISSION_LY,0) as PREPAID_OUT_OF_ACE_ATM_COMMISSION_ly, coalesce(b.PREPAID_OUT_OF_ACE_ATM_COMMISSION ,0) as PREPAID_OUT_OF_ACE_ATM_COMMISSION_plan, COALESCE(A. DDA_CARD_SALE_REVENUE ,0) AS DDA_CARD_SALE_REVENUE ,COALESCE(DDA_CARD_SALE_REVENUE_LY,0) as DDA_CARD_SALE_REVENUE_ly, coalesce(b. DDA_CARD_SALE_REVENUE ,0) as DDA_CARD_SALE_REVENUE_plan, COALESCE(A. DDA_STORE_LOAD_REVENUE,0) AS DDA_STORE_LOAD_REVENUE,COALESCE(DDA_STORE_LOAD_REVENUE_LY,0) as DDA_STORE_LOAD_REVENUE_ly,coalesce(b. DDA_STORE_LOAD_REVENUE,0) as DDA_STORE_LOAD_REVENUE_plan, COALESCE(A. DDA_WITHDRAWAL_REVENUE ,0) AS DDA_WITHDRAWAL_REVENUE ,COALESCE(DDA_WITHDRAWAL_REVENUE_LY,0) as DDA_WITHDRAWAL_REVENUE_ly,coalesce(b. DDA_WITHDRAWAL_REVENUE ,0) as DDA_WITHDRAWAL_REVENUE_plan, COALESCE(A. DDA_INTERCHANGE_COMMISSION ,0) AS DDA_INTERCHANGE_COMMISSION ,COALESCE(DDA_INTERCHANGE_COMMISSION_LY,0) as DDA_INTERCHANGE_COMMISSION_ly,coalesce(b. DDA_INTERCHANGE_COMMISSION ,0) as DDA_INTERCHANGE_COMMISSION_plan, COALESCE(A. DDA_OVERDRAFT_COMMISSION ,0) AS DDA_OVERDRAFT_COMMISSION ,COALESCE(DDA_OVERDRAFT_COMMISSION_LY,0) as DDA_OVERDRAFT_COMMISSION_ly,coalesce(b. DDA_OVERDRAFT_COMMISSION ,0) as DDA_OVERDRAFT_COMMISSION_plan, COALESCE(A. DDA_OUT_OF_ACE_ATM_COMMISSION ,0) AS DDA_OUT_OF_ACE_ATM_COMMISSION ,COALESCE(DDA_OUT_OF_ACE_ATM_COMMISSION_LY,0) as DDA_OUT_OF_ACE_ATM_COMMISSION_ly,coalesce(b. DDA_OUT_OF_ACE_ATM_COMMISSION ,0) as DDA_OUT_OF_ACE_ATM_COMMISSION_plan, COALESCE(A. DDA_SUBSCRIPTION_COMMISSION,0) AS DDA_SUBSCRIPTION_COMMISSION,COALESCE(DDA_SUBSCRIPTION_COMMISSION_LY,0) as DDA_SUBSCRIPTION_COMMISSION_ly,coalesce(b. DDA_SUBSCRIPTION_COMMISSION,0) as DDA_SUBSCRIPTION_COMMISSION_plan, COALESCE(A. DDA_TRANSACTION_COMMISSION ,0) AS DDA_TRANSACTION_COMMISSION ,COALESCE(DDA_TRANSACTION_COMMISSION_LY,0) as DDA_TRANSACTION_COMMISSION_ly,coalesce(b. DDA_TRANSACTION_COMMISSION ,0) as DDA_TRANSACTION_COMMISSION_plan, COALESCE(A.OTHER_DDA_CARD_REVENUE,0) AS OTHER_DDA_CARD_REVENUE,COALESCE(OTHER_DDA_CARD_REVENUE_LY,0) as OTHER_DDA_CARD_REVENUE_ly,coalesce(b. OTHER_DDA_CARD_REVENUE,0) as OTHER_DDA_CARD_REVENUE_plan, COALESCE(A. DDA_STORE_LOAD_COMMISSION ,0) AS DDA_STORE_LOAD_COMMISSION ,COALESCE(DDA_STORE_LOAD_COMMISSION_LY,0) as DDA_STORE_LOAD_COMMISSION_ly,coalesce(b. DDA_STORE_LOAD_COMMISSION ,0) as DDA_STORE_LOAD_COMMISSION_plan, COALESCE(A.DDA_WITHDRAWAL_COMMISSION,0) AS DDA_WITHDRAWAL_COMMISSION,COALESCE(DDA_WITHDRAWAL_COMMISSION_LY,0) as DDA_WITHDRAWAL_COMMISSION_ly,coalesce(b.DDA_WITHDRAWAL_COMMISSION,0) as DDA_WITHDRAWAL_COMMISSION_plan, COALESCE(A.DDA_DD_LOAD_COMMISSION,0) AS DDA_DD_LOAD_COMMISSION,COALESCE(DDA_DD_LOAD_COMMISSION_LY,0) as DDA_DD_LOAD_COMMISSION_ly,coalesce(b.DDA_DD_LOAD_COMMISSION,0) as DDA_DD_LOAD_COMMISSION_plan, coalesce(a.PPLoadFeesandCardSales,0) as PPLoadFeesandCardSales, coalesce(PPLoadFeesandCardSales_ly,0) as PPLoadFeesandCardSales_ly,coalesce(b.PPLoadFeesandCardSales,0) as PPLoadFeesandCardSales_plan, coalesce(a.DDLoadFeesandCardSales,0) as DDLoadFeesandCardSales, coalesce(DDLoadFeesandCardSales_ly,0) as DDLoadFeesandCardSales_ly,coalesce(b.DDLoadFeesandCardSales,0) as DDLoadFeesandCardSales_plan, coalesce(a.INTERNET_1ST_TIME_RETURNED_VOLUME,0) as INTERNET_1ST_TIME_RETURNED_VOLUME, coalesce(INTERNET_1ST_TIME_RETURNED_VOLUME_ly,0) as INTERNET_1ST_TIME_RETURNED_VOLUME_ly,coalesce(b.INTERNET_1ST_TIME_RETURNED_VOLUME,0) as INTERNET_1ST_TIME_RETURNED_VOLUME_plan, coalesce(a.INTERNET_INTEREST_INCOME,0) as INTERNET_INTEREST_INCOME, coalesce(INTERNET_INTEREST_INCOME_ly,0) as INTERNET_INTEREST_INCOME_ly,coalesce(b.INTERNET_INTEREST_INCOME,0) as INTERNET_INTEREST_INCOME_plan, coalesce(a.INTERNET_NET_COLLECTIONS,0) as INTERNET_NET_COLLECTIONS, coalesce(INTERNET_NET_COLLECTIONS_ly,0) as INTERNET_NET_COLLECTIONS_ly,coalesce(b.INTERNET_NET_COLLECTIONS,0) as INTERNET_NET_COLLECTIONS_plan, coalesce(a.MOBILE_CHECK_ACE_FEES,0) as MOBILE_CHECK_ACE_FEES, coalesce(MOBILE_CHECK_ACE_FEES_ly,0) as MOBILE_CHECK_ACE_FEES_ly,coalesce(b.MOBILE_CHECK_ACE_FEES,0) as MOBILE_CHECK_ACE_FEES_plan, coalesce(a.STOREFRONT_PAYDAY_INTEREST_INCOME,0) as STOREFRONT_PAYDAY_INTEREST_INCOME, coalesce(STOREFRONT_PAYDAY_INTEREST_INCOME_ly,0) as STOREFRONT_PAYDAY_INTEREST_INCOME_ly,coalesce(b.STOREFRONT_PAYDAY_INTEREST_INCOME,0) as STOREFRONT_PAYDAY_INTEREST_INCOME_plan, coalesce(a.STOREFRONT_INSTALLMENT_INTEREST_INCOME,0) as STOREFRONT_INSTALLMENT_INTEREST_INCOME, coalesce(STOREFRONT_INSTALLMENT_INTEREST_INCOME_ly,0) as STOREFRONT_INSTALLMENT_INTEREST_INCOME_ly,coalesce(b.STOREFRONT_INSTALLMENT_INTEREST_INCOME,0) as STOREFRONT_INSTALLMENT_INTEREST_INCOME_plan, coalesce(a.STOREFRONT_TITLE_INTEREST_INCOME,0) as STOREFRONT_TITLE_INTEREST_INCOME, coalesce(STOREFRONT_TITLE_INTEREST_INCOME_ly,0) as STOREFRONT_TITLE_INTEREST_INCOME_ly,coalesce(b.STOREFRONT_TITLE_INTEREST_INCOME,0) as STOREFRONT_TITLE_INTEREST_INCOME_plan, coalesce(a.STOREFRONT_PAYDAY_1ST_TIME_RETURNED_VOLUME,0) as STOREFRONT_PAYDAY_1ST_TIME_RETURNED_VOLUME, coalesce(STOREFRONT_PAYDAY_1ST_TIME_RETURNED_VOLUME_ly,0) as STOREFRONT_PAYDAY_1ST_TIME_RETURNED_VOLUME_ly,coalesce(b.STOREFRONT_PAYDAY_1ST_TIME_RETURNED_VOLUME,0) as STOREFRONT_PAYDAY_1ST_TIME_RETURNED_VOLUME_plan, coalesce(a.STOREFRONT_INSTALLMENT_1ST_TIME_RETURNED_VOLUME,0) as STOREFRONT_INSTALLMENT_1ST_TIME_RETURNED_VOLUME, coalesce(STOREFRONT_INSTALLMENT_1ST_TIME_RETURNED_VOLUME_ly,0) as STOREFRONT_INSTALLMENT_1ST_TIME_RETURNED_VOLUME_ly,coalesce(b.STOREFRONT_INSTALLMENT_1ST_TIME_RETURNED_VOLUME,0) as STOREFRONT_INSTALLMENT_1ST_TIME_RETURNED_VOLUME_plan, coalesce(a.STOREFRONT_TITLE_1ST_TIME_RETURNED_VOLUME,0) as STOREFRONT_TITLE_1ST_TIME_RETURNED_VOLUME, coalesce(STOREFRONT_TITLE_1ST_TIME_RETURNED_VOLUME_ly,0) as STOREFRONT_TITLE_1ST_TIME_RETURNED_VOLUME_ly,coalesce(b.STOREFRONT_TITLE_1ST_TIME_RETURNED_VOLUME,0) as STOREFRONT_TITLE_1ST_TIME_RETURNED_VOLUME_plan, coalesce(a.STOREFRONT_PAYDAY_COLLECTIONS,0) as STOREFRONT_PAYDAY_COLLECTIONS, coalesce(STOREFRONT_PAYDAY_COLLECTIONS_ly,0) as STOREFRONT_PAYDAY_COLLECTIONS_ly,coalesce(b.STOREFRONT_PAYDAY_COLLECTIONS,0) as STOREFRONT_PAYDAY_COLLECTIONS_plan, coalesce(a.STOREFRONT_INSTALLMENT_NET_COLLECTIONS,0) as STOREFRONT_INSTALLMENT_NET_COLLECTIONS, coalesce(STOREFRONT_INSTALLMENT_NET_COLLECTIONS_ly,0) as STOREFRONT_INSTALLMENT_NET_COLLECTIONS_ly,coalesce(b.STOREFRONT_INSTALLMENT_NET_COLLECTIONS,0) as STOREFRONT_INSTALLMENT_NET_COLLECTIONS_plan, coalesce(a.STOREFRONT_TITLE_NET_COLLECTIONS,0) as STOREFRONT_TITLE_NET_COLLECTIONS, coalesce(STOREFRONT_TITLE_NET_COLLECTIONS_ly,0) as STOREFRONT_TITLE_NET_COLLECTIONS_ly,coalesce(b.STOREFRONT_TITLE_NET_COLLECTIONS,0) as STOREFRONT_TITLE_NET_COLLECTIONS_plan, coalesce(a.PREPAID_INTERCHANGE_COMMISSION,0) as PREPAID_INTERCHANGE_COMMISSION, coalesce(PREPAID_INTERCHANGE_COMMISSION_ly,0) as PREPAID_INTERCHANGE_COMMISSION_ly,coalesce(b.PREPAID_INTERCHANGE_COMMISSION,0) as PREPAID_INTERCHANGE_COMMISSION_plan 
--from actuals a 
--full outer join plan b on a.center = b.center 
--and a.period = b.period 
--JOIN DAILYREVENUETRACKER_temp_dates d ON coalesce(a.period,b.period)>=d.EXPIRATION_DATE_ID 
--AND to_date(coalesce(a.period,b.period),'YYYYMMDD') <= lastdayofmon 
--distribute on random;
--
--v_iRow_Count := ROW_COUNT;
--
--CALL CreateAuditEvent(v_iETL_Date, v_iETL_Job_ID, v_iSeverity, v_iRow_Count, v_strSP_Name, v_strPackage_Name, v_strMessage);
--
--v_iRow_Count := 0;
--
--v_strMessage := 'Delete from DAILYREVENUETRACKER where extract_date_ID = ' || v_iETL_Date;
--
--DELETE FROM DAILYREVENUETRACKER 
--WHERE period >= ( 
--select EXPIRATION_DATE_ID 
--from DAILYREVENUETRACKER_temp_dates);
--
--v_iRow_Count := ROW_COUNT;
--
--v_strMessage := 'Insert into TABLE dailyrevenuetracker ' || v_iETL_Date;
--
--INSERT INTO dailyrevenuetracker 
--select A.*, ELITE + DDA + GREEN_DOT_LOAD_FEES + ATM_FEE as TotalCardRev, ELITE_LY + DDA_LY + GREEN_DOT_LOAD_FEES_LY + ATM_FEE_LY as TotalCardRev_ly, ELITE_Plan + DDA_Plan + GREEN_DOT_LOAD_FEES_Plan + ATM_FEE_Plan as TotalCardRev_plan, d.EXTRACT_DATE_ID, "TIMESTAMP"('now'::"VARCHAR") DW_MOD_DATETIME 
--FROM ( 
--SELECT a.center,period,to_date(period,'YYYYMMDD') DATES,NET_CHECK_FEES, NET_CHK_FEE_LY, NET_CHECK_FEES_PLAN, NET_TAX_FEES, NET_TAX_FEE_LY, NET_TAX_FEES_PLAN, REGULAR_CHECK_1ST_TIME_RETURNED_VOLUME, REGULAR_CHECK_1ST_TIME_RETURNED_VOLUME_LY, REGULAR_CHECK_1ST_TIME_RETURNED_VOLUME_PLAN, NET_CHECK_COLLECTIONS, NET_CHECK_COLLECTIONS_LY, NET_CHECK_COLLECTIONS_PLAN, CHECKLOSS, CHECKLOSS_LY, CHECKLOSS_PLAN, NET_CHECK_REVENUE,NET_CHECK_REVENUE_ly,NET_CHECK_REVENUE_plan,TOTAL_INTEREST_INCOME, TOTAL_INTEREST_INCOME_LY, TOTAL_INTEREST_INCOME_PLAN, LOAN_FIRST_RETURNS, LOAN_FIRST_RETURNS_LY, LOAN_FIRST_RETURNS_PLAN, NET_LOAN_COLLECTIONS, NET_LOAN_COLLECTIONS_LY, NET_LOAN_COLLECTIONS_PLAN, NET_LOAN_REVENUE, NET_LOAN_REVENUE_LY, NET_LOAN_REVENUE_PLAN, LOAN_LOSS, LOAN_LOSS_LY, LOAN_LOSS_PLAN, MONEY_ORDER_FEES,MONEY_ORDER_FEES_LY, MONEY_ORDER_FEES_PLAN, MONEY_GRAM_FEES, MONEY_GRAM_FEES_LY,MONEY_GRAM_FEES_PLAN, BILL_PAYMENT_FEES, BILL_PAYMENT_FEES_LY, BILL_PAYMENT_FEES_PLAN, ELECTRONIC_TAX_FEES, ELECTRONIC_TAX_FEES_LY, ELECTRONIC_TAX_FEES_PLAN, NEW_CUSTOMER_FEES, NEW_CUSTOMER_FEES_LY, NEW_CUSTOMER_FEES_PLAN, OTHER_REVENUE, OTHER_REVENUE_LY, OTHER_REVENUE_PLAN, TOTAL_MONEY_SERVICES, TOTAL_MONEY_SERVICES_LY, TOTAL_MONEY_SERVICES_PLAN, DENIED_CHECKS, DENIED_CHECKS_LY, CHECKS_CASHED, CHECKS_CASHED_LY, CHECK_FEE_ADJUSTMENT, CHECK_FEE_ADJUSTMENT_LY, PREPAID_CARD_SALE_REVENUE,PREPAID_CARD_SALE_REVENUE_LY,PREPAID_CARD_SALE_REVENUE_PLAN, PREPAID_STORE_LOAD_REVENUE,PREPAID_STORE_LOAD_REVENUE_LY,PREPAID_STORE_LOAD_REVENUE_PLAN, PREPAID_WITHDRAWAL_REVENUE,PREPAID_WITHDRAWAL_REVENUE_LY,PREPAID_WITHDRAWAL_REVENUE_PLAN, GREEN_DOT_LOAD_FEES ,GREEN_DOT_LOAD_FEES_LY,GREEN_DOT_LOAD_FEES_PLAN, ATM_FEE,ATM_FEE_LY,ATM_FEE_PLAN, PREPAID_STORE_LOAD_COMMISSION,PREPAID_STORE_LOAD_COMMISSION_LY,PREPAID_STORE_LOAD_COMMISSION_PLAN, PREPAID_DD_LOAD_COMMISSION,PREPAID_DD_LOAD_COMMISSION_LY,PREPAID_DD_LOAD_COMMISSION_PLAN, PREPAID_WITHDRAWAL_COMMISSION,PREPAID_WITHDRAWAL_COMMISSION_LY,PREPAID_WITHDRAWAL_COMMISSION_PLAN, PREPAID_OVERDRAFT_COMMISSION,PREPAID_OVERDRAFT_COMMISSION_LY,PREPAID_OVERDRAFT_COMMISSION_PLAN, PREPAID_SUBSCRIPTION_COMMISSION ,PREPAID_SUBSCRIPTION_COMMISSION_LY,PREPAID_SUBSCRIPTION_COMMISSION_PLAN, PREPAID_TRANSACTION_COMMISSION ,PREPAID_TRANSACTION_COMMISSION_LY,PREPAID_TRANSACTION_COMMISSION_PLAN, OTHER_PREPAID_CARD_REVENUE ,OTHER_PREPAID_CARD_REVENUE_LY,OTHER_PREPAID_CARD_REVENUE_PLAN, PREPAID_OUT_OF_ACE_ATM_COMMISSION ,PREPAID_OUT_OF_ACE_ATM_COMMISSION_LY,PREPAID_OUT_OF_ACE_ATM_COMMISSION_PLAN, DDA_CARD_SALE_REVENUE ,DDA_CARD_SALE_REVENUE_LY,DDA_CARD_SALE_REVENUE_PLAN, DDA_STORE_LOAD_REVENUE,DDA_STORE_LOAD_REVENUE_LY,DDA_STORE_LOAD_REVENUE_PLAN, DDA_WITHDRAWAL_REVENUE ,DDA_WITHDRAWAL_REVENUE_LY,DDA_WITHDRAWAL_REVENUE_PLAN, DDA_INTERCHANGE_COMMISSION ,DDA_INTERCHANGE_COMMISSION_LY,DDA_INTERCHANGE_COMMISSION_PLAN, DDA_WITHDRAWAL_COMMISSION,DDA_WITHDRAWAL_COMMISSION_LY,DDA_WITHDRAWAL_COMMISSION_PLAN, DDA_OVERDRAFT_COMMISSION ,DDA_OVERDRAFT_COMMISSION_LY,DDA_OVERDRAFT_COMMISSION_PLAN, DDA_OUT_OF_ACE_ATM_COMMISSION ,DDA_OUT_OF_ACE_ATM_COMMISSION_LY,DDA_OUT_OF_ACE_ATM_COMMISSION_PLAN, DDA_SUBSCRIPTION_COMMISSION,DDA_SUBSCRIPTION_COMMISSION_LY,DDA_SUBSCRIPTION_COMMISSION_PLAN, DDA_TRANSACTION_COMMISSION ,DDA_TRANSACTION_COMMISSION_LY,DDA_TRANSACTION_COMMISSION_PLAN, OTHER_DDA_CARD_REVENUE,OTHER_DDA_CARD_REVENUE_LY,OTHER_DDA_CARD_REVENUE_PLAN, DDA_STORE_LOAD_COMMISSION ,DDA_STORE_LOAD_COMMISSION_LY,DDA_STORE_LOAD_COMMISSION_PLAN, DDA_DD_LOAD_COMMISSION,DDA_DD_LOAD_COMMISSION_LY,DDA_DD_LOAD_COMMISSION_PLAN, PPLoadFeesandCardSales, PPLoadFeesandCardSales_ly, PPLoadFeesandCardSales_plan, DDLoadFeesandCardSales, DDLoadFeesandCardSales_ly, DDLoadFeesandCardSales_plan, (GREEN_DOT_LOAD_FEES + ATM_FEE) AS OTHERREVENUE ,(GREEN_DOT_LOAD_FEES_LY + ATM_FEE_LY) AS OTHERREVENUE_LY,(GREEN_DOT_LOAD_FEES_PLAN + ATM_FEE_PLAN) AS OTHERREVENUE_PLAN , (PPLoadFeesandCardSales + PREPAID_WITHDRAWAL_REVENUE + PREPAID_STORE_LOAD_COMMISSION + PREPAID_DD_LOAD_COMMISSION + PREPAID_WITHDRAWAL_COMMISSION + PREPAID_OVERDRAFT_COMMISSION + PREPAID_SUBSCRIPTION_COMMISSION + PREPAID_TRANSACTION_COMMISSION + OTHER_PREPAID_CARD_REVENUE + COALESCE(PREPAID_OUT_OF_ACE_ATM_COMMISSION,0) + COALESCE(PREPAID_INTERCHANGE_COMMISSION,0) ) AS ELITE, ( PPLoadFeesandCardSales_LY + PREPAID_WITHDRAWAL_REVENUE_LY +PREPAID_STORE_LOAD_COMMISSION_LY + PREPAID_DD_LOAD_COMMISSION_LY + PREPAID_WITHDRAWAL_COMMISSION_LY + PREPAID_OVERDRAFT_COMMISSION_LY + PREPAID_SUBSCRIPTION_COMMISSION_LY + PREPAID_TRANSACTION_COMMISSION_LY + OTHER_PREPAID_CARD_REVENUE_LY ) AS ELITE_LY, ( PPLoadFeesandCardSales_PLAN + PREPAID_WITHDRAWAL_REVENUE_PLAN +PREPAID_STORE_LOAD_COMMISSION_Plan + PREPAID_DD_LOAD_COMMISSION_Plan + PREPAID_WITHDRAWAL_COMMISSION_Plan + PREPAID_OVERDRAFT_COMMISSION_Plan + PREPAID_SUBSCRIPTION_COMMISSION_Plan + PREPAID_TRANSACTION_COMMISSION_Plan + OTHER_PREPAID_CARD_REVENUE_Plan + COALESCE(PREPAID_OUT_OF_ACE_ATM_COMMISSION_plan,0) + COALESCE(PREPAID_INTERCHANGE_COMMISSION_plan,0) ) AS ELITE_Plan, ( DDLoadFeesandCardSales + DDA_WITHDRAWAL_REVENUE + DDA_INTERCHANGE_COMMISSION + DDA_WITHDRAWAL_COMMISSION + DDA_OVERDRAFT_COMMISSION + DDA_OUT_OF_ACE_ATM_COMMISSION + DDA_SUBSCRIPTION_COMMISSION + DDA_TRANSACTION_COMMISSION + OTHER_DDA_CARD_REVENUE ) as DDA, ( DDLoadFeesandCardSales_LY + DDA_WITHDRAWAL_REVENUE_LY +DDA_INTERCHANGE_COMMISSION_LY + DDA_WITHDRAWAL_COMMISSION_LY + DDA_OVERDRAFT_COMMISSION_LY + DDA_OUT_OF_ACE_ATM_COMMISSION_LY + DDA_SUBSCRIPTION_COMMISSION_LY + DDA_TRANSACTION_COMMISSION_LY + OTHER_DDA_CARD_REVENUE_LY ) as DDA_LY, ( DDLoadFeesandCardSales_PLAN + DDA_WITHDRAWAL_REVENUE_PLAN + DDA_INTERCHANGE_COMMISSION_Plan + DDA_WITHDRAWAL_COMMISSION_Plan + DDA_OVERDRAFT_COMMISSION_Plan + DDA_OUT_OF_ACE_ATM_COMMISSION_Plan + DDA_SUBSCRIPTION_COMMISSION_Plan + DDA_TRANSACTION_COMMISSION_Plan + OTHER_DDA_CARD_REVENUE_Plan ) as DDA_Plan, ( PREPAID_STORE_LOAD_COMMISSION + PREPAID_DD_LOAD_COMMISSION + PREPAID_WITHDRAWAL_COMMISSION + PREPAID_OVERDRAFT_COMMISSION + PREPAID_SUBSCRIPTION_COMMISSION + PREPAID_TRANSACTION_COMMISSION + OTHER_PREPAID_CARD_REVENUE + DDA_INTERCHANGE_COMMISSION + DDA_WITHDRAWAL_COMMISSION + DDA_OVERDRAFT_COMMISSION + DDA_OUT_OF_ACE_ATM_COMMISSION + DDA_SUBSCRIPTION_COMMISSION + DDA_TRANSACTION_COMMISSION + OTHER_DDA_CARD_REVENUE + COALESCE(PREPAID_OUT_OF_ACE_ATM_COMMISSION,0) + COALESCE(PREPAID_INTERCHANGE_COMMISSION,0) ) as TOTALCOMM, ( PREPAID_STORE_LOAD_COMMISSION_LY + PREPAID_DD_LOAD_COMMISSION_LY + PREPAID_WITHDRAWAL_COMMISSION_LY + PREPAID_OVERDRAFT_COMMISSION_LY + PREPAID_SUBSCRIPTION_COMMISSION_LY + PREPAID_TRANSACTION_COMMISSION_LY + OTHER_PREPAID_CARD_REVENUE_LY + DDA_INTERCHANGE_COMMISSION_LY + DDA_WITHDRAWAL_COMMISSION_LY + DDA_OVERDRAFT_COMMISSION_LY + DDA_OUT_OF_ACE_ATM_COMMISSION_LY + DDA_SUBSCRIPTION_COMMISSION_LY + DDA_TRANSACTION_COMMISSION_LY + OTHER_DDA_CARD_REVENUE_LY) as TOTALCOMM_LY, ( PREPAID_STORE_LOAD_COMMISSION_Plan + PREPAID_DD_LOAD_COMMISSION_Plan + PREPAID_WITHDRAWAL_COMMISSION_Plan + PREPAID_OVERDRAFT_COMMISSION_Plan + PREPAID_SUBSCRIPTION_COMMISSION_Plan + PREPAID_TRANSACTION_COMMISSION_Plan + OTHER_PREPAID_CARD_REVENUE_Plan + DDA_INTERCHANGE_COMMISSION_Plan + DDA_WITHDRAWAL_COMMISSION_Plan + DDA_OVERDRAFT_COMMISSION_Plan + DDA_OUT_OF_ACE_ATM_COMMISSION_Plan + DDA_SUBSCRIPTION_COMMISSION_Plan + DDA_TRANSACTION_COMMISSION_Plan + OTHER_DDA_CARD_REVENUE_Plan + COALESCE(PREPAID_OUT_OF_ACE_ATM_COMMISSION_plan,0) + COALESCE(PREPAID_INTERCHANGE_COMMISSION_plan,0) ) as TOTALCOMM_plan, INTERNET_1ST_TIME_RETURNED_VOLUME, INTERNET_1ST_TIME_RETURNED_VOLUME_ly,INTERNET_1ST_TIME_RETURNED_VOLUME_plan, INTERNET_INTEREST_INCOME, INTERNET_INTEREST_INCOME_ly, INTERNET_INTEREST_INCOME_plan, INTERNET_NET_COLLECTIONS, INTERNET_NET_COLLECTIONS_ly, INTERNET_NET_COLLECTIONS_plan, MOBILE_CHECK_ACE_FEES, MOBILE_CHECK_ACE_FEES_ly, MOBILE_CHECK_ACE_FEES_plan, STOREFRONT_PAYDAY_INTEREST_INCOME, STOREFRONT_PAYDAY_INTEREST_INCOME_ly, STOREFRONT_PAYDAY_INTEREST_INCOME_plan, STOREFRONT_INSTALLMENT_INTEREST_INCOME, STOREFRONT_INSTALLMENT_INTEREST_INCOME_ly, STOREFRONT_INSTALLMENT_INTEREST_INCOME_plan, STOREFRONT_TITLE_INTEREST_INCOME, STOREFRONT_TITLE_INTEREST_INCOME_ly, STOREFRONT_TITLE_INTEREST_INCOME_plan, STOREFRONT_PAYDAY_1ST_TIME_RETURNED_VOLUME, STOREFRONT_PAYDAY_1ST_TIME_RETURNED_VOLUME_ly, STOREFRONT_PAYDAY_1ST_TIME_RETURNED_VOLUME_plan, STOREFRONT_INSTALLMENT_1ST_TIME_RETURNED_VOLUME, STOREFRONT_INSTALLMENT_1ST_TIME_RETURNED_VOLUME_ly, STOREFRONT_INSTALLMENT_1ST_TIME_RETURNED_VOLUME_plan, STOREFRONT_TITLE_1ST_TIME_RETURNED_VOLUME, STOREFRONT_TITLE_1ST_TIME_RETURNED_VOLUME_ly, STOREFRONT_TITLE_1ST_TIME_RETURNED_VOLUME_plan, STOREFRONT_PAYDAY_COLLECTIONS, STOREFRONT_PAYDAY_COLLECTIONS_ly, STOREFRONT_PAYDAY_COLLECTIONS_plan, STOREFRONT_INSTALLMENT_NET_COLLECTIONS, STOREFRONT_INSTALLMENT_NET_COLLECTIONS_ly, STOREFRONT_INSTALLMENT_NET_COLLECTIONS_plan, STOREFRONT_TITLE_NET_COLLECTIONS, STOREFRONT_TITLE_NET_COLLECTIONS_ly, STOREFRONT_TITLE_NET_COLLECTIONS_plan, PREPAID_INTERCHANGE_COMMISSION, PREPAID_INTERCHANGE_COMMISSION_ly, PREPAID_INTERCHANGE_COMMISSION_plan 
--FROM DATA A ) A 
--JOIN DAILYREVENUETRACKER_temp_dates d ON A.PERIOD>=d.EXPIRATION_DATE_ID;
--
--v_iRow_Count := ROW_COUNT;
--
--v_iRow_Count := ROW_COUNT;
--
--CALL CreateAuditEvent(v_iETL_Date, v_iETL_Job_ID, v_iSeverity, v_iRow_Count, v_strSP_Name, v_strPackage_Name, v_strMessage);
--
--v_iRow_Count := 0;
--
--v_strMessage := 'Procedure Completed Successfully';
--
--CALL CreateAuditEvent(v_iETL_Date, v_iETL_Job_ID, v_iSeverity, v_iRow_Count, v_strSP_Name, v_strPackage_Name, v_strMessage);
--
--RETURN (0);
--
--EXCEPTION WHEN OTHERS THEN v_strMessage := v_strMessage || SQLERRM;
--
--CALL CreateAuditEvent(v_iETL_Date, v_iETL_Job_ID, v_iSeverity, v_iRow_Count, v_strSP_Name, v_strPackage_Name, v_strMessage);
--
--RAISE EXCEPTION '%', v_strMessage;
--
--RETURN (1);
--
--END;
--
--END_PROC;
--
--